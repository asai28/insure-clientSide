{"version":3,"sources":["constants/routes.js","utils/API.js","Pages/ServiceRequestForm/ServiceRequestForm.js","Pages/TaskList/TaskList.js","App.js","index.js"],"names":["routes","API","postService","item","axios","post","getEmployees","get","newCompanyLocation","newCompanyContact","newCompany","getLocation","getContact","getCompany","getCompanyDetails","companyName","getCompanyContacts","getCompanyLocations","getCompanyEquipments","postCompanyEquipments","getTopicBasedEquipments","newServiceRequest","getServiceRequests","deleteServiceRequests","delete","deleteService","serviceName","getListOfServices","addTask","getEmployeeTasks","employee","window","html2canvas","styles","pdf","padding","height","width","h4","color","logo","float","info","content","clear","quotation","fontFamily","billedTo","quote","FaPlus","FaCheck","FaTimes","note","fontSize","fontWeight","notify","display","removeContactNotification","equipmentsAlwaysOnSite","equipmentIDs","uniqueCompanies","employees","us_states","key","states","push","Example","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","componentDidMount","getCompanies","document","getElementById","style","componentWillMount","then","res","setState","topicsVsEquipments","data","console","log","catch","err","listOfServices","getPriceAndQuantity","result","state","filter","element","topic","trim","value","serviceUnits","DurationInMin","costOfService","service","Laptop","projectorScreen","Table","trainingKit","forkliftTrainingKit","CPRmannequins","firstAidAEDKit","RespiratorFitTestKit","Handouts","costForService","result2","undefined","qty","cost","showTopics","description","getAvailableEquipments","i","length","addContact","newCompanyName","newContactName","newContactEmail","newContactOfficePhone","newContactMobilePhone","newContactMobilePhoneAlternate","mainContact","reset","addLocation","newContactStreetAddress","newContactCity","newContactState","newContactZIP","newContactCountry","mainLocation","addService","billable","billableService","parseFloat","alternateName","serviceDescription","saveServices","requestedServices","requestedServiceRows","getServices","toggleServiceModal","x","map","index","react_default","a","createElement","toFixed","totalCost","removeServices","id","fa","onClick","indexOf","companyNames","saveCompany","newProducer","newAgency","newContractClient","toggleModal","handlePDF","startDate","offsetHeight","offsetWidth","scale","dpi","canvas","wid","hgt","img","toDataURL","hratio","doc","jsPDF","internal","pageSize","addImage","toDate","save","format","handleCompanyName","validCompanyName","companyMobileContacts","contactMobilePhone","companyOfficeContacts","contactOfficePhone","companyLocations","checked","validatePhone","re","RegExp","validPhone","test","contactPhone","isNaN","validateCellPhone","validCellPhone","contactCellPhone","validateEmail","validEmail","String","contactEmail","toLowerCase","validateZIP","zipRegex","validZIP","zip","handleSubmit","e","preventDefault","validThru","paymentBy","paymentForTraining","producer","contactPerson","contactName","contactState","contactStreetAddress","contactCity","contactZip","contactCountry","country","quotationIssuedBy","instructions","quotationNumber","quoteNumber","res1","client","res2","res3","moment","add","services","sameLocAsTraining","streetAddress","city","equipmentsSelectedSite","equipmentsSelectedTraining","equipments","active","addOn","error","modal","serviceModal","viewServiceRows","viewServiceModal","popoverOpen","additionalEquipments","handleInputChange","_e$target","target","name","defineProperty","toggleViewServicesModal","bind","assertThisInitialized","handleChange","togglePopOver","EMP_NAME","date","_this2","src","alt","className","reactstrap_es","for","type","onChange","option","isOpen","toggle","placeholder","defaultChecked","es","selected","placement","keys","cities","y","contactZIP","disabled","getInitial","dist_default","React","Component","TaskList","employee_data","getTasks","split","join","tasks","quoteApproved","tooltipOpen","text-align","isNullOrUndefined","dateCompleted","dateAssigned","dueDate","createdAt","status_notes_comments","tag","check","App","process","light","expand","href","navbar","CONSTANTS","BrowserRouter","basename","Switch","Route","exact","path","component","ServiceRequestForm","ReactDOM","render","src_App"],"mappings":"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","file":"static/js/main.623770b2.chunk.js","sourcesContent":["const REGISTER = '/register';\r\nconst LOGIN = '/login';\r\nconst SERVICE_FORM = '/srf';\r\nconst TASK_LIST = '/tasklist';\r\n\r\nexport default {\r\n    REGISTER: REGISTER,\r\n    LOGIN: LOGIN,\r\n    SERVICE_FORM: SERVICE_FORM,\r\n    TASK_LIST: TASK_LIST\r\n}","import axios from \"axios\";\r\n\r\nexport default{\r\n\r\n    postService : function(item) {\r\n        return axios.post(\"/api/services\", item)\r\n    },\r\n\r\n    getEmployees : function(){\r\n        return axios.get(\"/api/employees\")\r\n    },\r\n\r\n    newCompanyLocation : function(item){\r\n        return axios.post(\"/api/locations\", item)\r\n    },\r\n\r\n    newCompanyContact : function(item){\r\n        return axios.post(\"/api/contacts\", item)\r\n    },\r\n\r\n    newCompany : function(item){\r\n        return axios.post(\"/api/companies\", item)\r\n    },\r\n    getLocation : function(){\r\n        return axios.get(\"/api/locations\")\r\n    },\r\n\r\n    getContact : function(){\r\n        return axios.get(\"/api/contacts\")\r\n    },\r\n\r\n    getCompany : function(){\r\n        return axios.get(\"/api/companies\")\r\n    },\r\n    getCompanyDetails: function(companyName){\r\n        return axios.get(\"/api/companies/\" + companyName)\r\n    },\r\n    getCompanyContacts: function(companyName){\r\n        return axios.get(\"/api/contacts/\" + companyName)\r\n    },\r\n    getCompanyLocations: function(companyName){\r\n        return axios.get(\"/api/locations/\" + companyName)\r\n    },\r\n    getCompanyEquipments: function(companyName){\r\n        return axios.get(\"/api/companiesEquipments/\" + companyName)\r\n    },\r\n    postCompanyEquipments: function(item){\r\n        return axios.post(\"/api/companiesEquipments/\", item)\r\n    },\r\n    getTopicBasedEquipments: function(){\r\n        return axios.get(\"/api/topics\")\r\n    },\r\n    newServiceRequest: function(item){\r\n        return axios.post(\"/api/requestedServices\", item)\r\n    },\r\n    getServiceRequests: function(){\r\n        return axios.get(\"/api/requestedServices\")\r\n    },\r\n    deleteServiceRequests: function(){\r\n        return axios.delete(\"/api/requestedServices/\")\r\n    },\r\n    deleteService: function(serviceName){\r\n        return axios.delete(\"/api/requestedServices/\" + serviceName)\r\n    },\r\n    getListOfServices: function(){\r\n        return axios.get(\"/api/listOfServices\")\r\n    },\r\n    addTask: function(item){\r\n        return axios.post(\"/api/taskList\", item)\r\n    },\r\n    getEmployeeTasks: function(employee){\r\n        return axios.get(\"/api/tasklist/\" + employee)\r\n    }\r\n}\r\n\r\n//https://cors-anywhere.herokuapp.com/\r\n","import React from \"react\";\r\n\r\n/*Imports for modals from reactstrap */\r\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter,Alert } from \"reactstrap\";\r\n\r\n/*Imports required for Form Group */\r\nimport { Form, FormGroup, Label, Input } from \"reactstrap\";\r\nimport { Container } from \"reactstrap\";\r\n\r\n/*Import tooltip or popover from reactstrap*/\r\n//import { Tooltip } from \"reactstrap\";\r\nimport {Popover, PopoverHeader, PopoverBody} from \"reactstrap\";\r\n\r\n//Importing CSS for body, logo and table of the pdf generator\r\nimport \"./style.css\";\r\n\r\n/*Imports required for React Calendar */\r\nimport DatePicker from \"react-datepicker\";\r\nimport moment from \"moment\";\r\nimport Moment from \"react-moment\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\n\r\n//Validation icons\r\nimport { FaPlus, FaCheckCircle, FaTimesCircle, FaTrash, FaTimes} from \"react-icons/fa\";\r\n\r\n//Importing cities and states for countries\r\nimport cities from \"../../utils/cities.json\";\r\nimport states from \"../../utils/us-states.json\";\r\nimport services from \"../../utils/services.json\";\r\n\r\n//Connection to backend\r\nimport API from \"../../utils/API\";\r\n\r\n//imports for PDF generation\r\nimport html2canvas from \"html2canvas\";\r\nimport jsPDF from \"jspdf\";\r\nwindow.html2canvas = html2canvas;\r\n\r\nconst styles = {\r\n  pdf: {\r\n    padding: \"10px 10px\",\r\n    height: \"180mm\",\r\n    width: \"200mm\"\r\n  },\r\n  h4: {\r\n    color: \"#000\"\r\n  },\r\n  logo: {\r\n    float: \"right\",\r\n    height: \"100px\",\r\n    width: \"300px\"\r\n  },\r\n  info: {\r\n    float: \"left\"\r\n  },\r\n  content: {\r\n    clear: \"both\"\r\n  },\r\n  quotation: {\r\n    fontFamily: \"Andika\",\r\n    color: \"#009999\"\r\n  },\r\n  billedTo: {\r\n    float: \"left\"\r\n  },\r\n  quote: {\r\n    float: \"right\"\r\n  },\r\n  FaPlus: {\r\n    color: \"#339933\"\r\n  },\r\n  FaCheck: {\r\n    color: \"#339933\"\r\n  },\r\n  FaTimes: {\r\n    color: \"#cc3300\"\r\n  },\r\n  note: {\r\n    fontFamily: \"Palatino Linotype\",\r\n    fontSize: \"0.75em\",\r\n    fontWeight: \"500\"\r\n  },\r\n  notify: {\r\n    color: \"#228B22\",\r\n    display: \"none\",\r\n    fontWeight: \"700\"\r\n  },\r\n  removeContactNotification: {\r\n    color: \"#E82C0C\",\r\n    display: \"none\",\r\n    fontWeight: \"700\"\r\n  }\r\n};\r\n\r\n//Initialized outside to add new equipments on the fly\r\nvar equipmentsAlwaysOnSite = [\r\n  \"Laptop\",\r\n  \"projectorScreen\",\r\n  \"Table\",\r\n  \"trainingKit\",\r\n  \"forkliftTrainingKit\",\r\n  \"CPRmannequins\",\r\n  \"firstAidAEDKit\",\r\n  \"Handouts\"\r\n];\r\nvar equipmentIDs = [\r\n  \"Laptop\",\r\n  \"projectorScreen\",\r\n  \"Table\",\r\n  \"trainingKit\",\r\n  \"forkliftTrainingKit\",\r\n  \"CPRmannequins\",\r\n  \"firstAidAEDKit\",\r\n  \"Handouts\"\r\n];\r\n\r\n//Unique Companies\r\nvar uniqueCompanies = [];\r\n\r\n//Get employee names from API.js\r\nvar employees = [];\r\n\r\n//Get company Details, contacts, locations\r\nvar getCompanyDetails = [];\r\nvar getCompanyContacts = [];\r\nvar getCompanyLocations = [];\r\n\r\n//Get all US states\r\nvar us_states = [];\r\nfor (let key in states) {\r\n  us_states.push(states[key]);\r\n}\r\n\r\nfunction getInitial(state) {\r\n  for (let key in states) {\r\n    if (states[key] === state) {\r\n      return key;\r\n    }\r\n  }\r\n}\r\n\r\nexport default class Example extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    //State variables for form elements and their validation\r\n    this.state = {\r\n      startDate: moment(),\r\n      validThru: moment()\r\n        .add(90, \"days\")\r\n        .format(\"YYYY-MM-DD\"),\r\n      newContractClient: false,\r\n      companyName: \"\",\r\n      newCompanyName: \"\",\r\n      companyNames: services.companyName,\r\n      country: \"United States\",\r\n      topic: \"\",\r\n      service: \"\",\r\n      producer: \"\",\r\n      sameLocAsTraining: false,\r\n      validCompanyName: false,\r\n      validPhone: false,\r\n      validEmail: false,\r\n      validCellPhone: false,\r\n      validZIP: false,\r\n      contactName: \"\",\r\n      contactPhone: \"\",\r\n      contactCellPhone: \"\",\r\n      contactEmail: \"\",\r\n      state: \"\",\r\n      streetAddress: \"\",\r\n      city: \"\",\r\n      zip: \"\",\r\n      contactStreetAddress: \"\",\r\n      contactZip: \"\",\r\n      contactCountry: \"United States\",\r\n      contactState: \"\",\r\n      contactCity: \"\",\r\n      //equipmentsForSite: [\"Laptop\", \"Projector Screen\", \"TV monitor\", \"Table\", \"Electrical power socket with extension cord\"],\r\n      equipmentsSelectedSite: [],\r\n      equipmentsSelectedTraining: [],\r\n      //equipmentsForTraining : [\"Laptop\", \"Projector Screen\", \"TV monitor\", \"Table\", \"Electrical power socket with extension cord\", \"Forklift training kit\", \"CPR mannequins\", \"First aid training bag\", \"AED training device\", \"Handouts\"],\r\n      equipments: [\r\n        \"Laptop\",\r\n        \"Projector Screen\",\r\n        \"Table\",\r\n        \"Training Kit (Green Duffle Bag)\",\r\n        \"Forklift Training Kit (Grey Duffle Bag)\",\r\n        \"CPR mannequins\",\r\n        \"First Aid & AED Kit (Red Backpack)\",\r\n        \"Handouts\"\r\n      ],\r\n      Laptop: false,\r\n      projectorScreen: false,\r\n      Table: false,\r\n      trainingKit: false,\r\n      forkliftTrainingKit: false,\r\n      CPRmannequins: false,\r\n      firstAidAEDKit: false,\r\n      RespiratorFitTestKit: false,\r\n      Handouts: false,\r\n      active: true,\r\n      addOn: \"\",\r\n      error: {},\r\n      modal: false,\r\n      quotationIssuedBy: \"\",\r\n      instructions: \"\",\r\n      serviceModal: false,\r\n      billableService: true,\r\n      alternateName: \"\",\r\n      costForService: 0.0,\r\n      requestedServices: [],\r\n      requestedServiceRows: [],\r\n      viewServiceRows: [],\r\n      totalCost: 0,\r\n      viewServiceModal: false,\r\n      showTopics: false,\r\n      popoverOpen: false,\r\n      description: \"\",\r\n      companyMobileContacts: [],\r\n      companyOfficeContacts: [],\r\n      companyLocations: [],\r\n      listOfServices: [],\r\n      additionalEquipments: [],\r\n      quotationNumber: \"\"\r\n    };\r\n    this.validateEmail = this.validateEmail.bind(this);\r\n    this.validatePhone = this.validatePhone.bind(this);\r\n    this.validateCellPhone = this.validateCellPhone.bind(this);\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.handleInputChange = this.handleInputChange.bind(this);\r\n    this.validateZIP = this.validateZIP.bind(this);\r\n    this.handleCompanyName = this.handleCompanyName.bind(this);\r\n    this.handlePDF = this.handlePDF.bind(this);\r\n    this.toggleModal = this.toggleModal.bind(this);\r\n    this.getEmployees = this.getEmployees.bind(this);\r\n    this.saveCompany = this.saveCompany.bind(this);\r\n    this.addContact = this.addContact.bind(this);\r\n    this.addLocation = this.addLocation.bind(this);\r\n    this.getCompanies = this.getCompanies.bind(this);\r\n    this.addService = this.addService.bind(this);\r\n    this.toggleServiceModal = this.toggleServiceModal.bind(this);\r\n    this.toggleViewServicesModal = this.toggleViewServicesModal.bind(this);\r\n    this.getPriceAndQuantity = this.getPriceAndQuantity.bind(this);\r\n    this.getServices = this.getServices.bind(this);\r\n    this.saveServices = this.saveServices.bind(this);\r\n    this.removeServices = this.removeServices.bind(this);\r\n    this.togglePopOver = this.togglePopOver.bind(this);\r\n  }\r\n  \r\n  componentDidMount = () => {\r\n    this.getEmployees();\r\n    this.getCompanies();\r\n    document.getElementById('addEquipment').style.display = \"none\";\r\n  };\r\n\r\n  componentWillMount = () => {\r\n    API.getTopicBasedEquipments()\r\n      .then(res => {\r\n        this.setState({\r\n          topicsVsEquipments : res.data\r\n        });\r\n        console.log(\"topic vs equipments loaded!\");\r\n      })\r\n      .catch(err => console.log(err));\r\n    API.getListOfServices()\r\n    .then(res => {\r\n      console.log(res);\r\n      this.setState({\r\n        listOfServices :res.data\r\n      })\r\n      \r\n      console.log(\"services list loaded!\");\r\n    })\r\n    .catch(err => console.log(err));\r\n  };\r\n\r\n  getPriceAndQuantity = () => {\r\n    var result = this.state.topicsVsEquipments.filter(\r\n      element => element.topic === this.state.topic\r\n    )[0];\r\n    if (result !== {} && this.state.topic.trim() !== \"\") {\r\n      document.getElementById(\"numServiceUnits\").value = result.serviceUnits;\r\n      document.getElementById(\"durationInMin\").value = result.DurationInMin;\r\n      document.getElementById(\"costForService\").value = result.costOfService;\r\n\r\n      this.setState({\r\n        service: \"Training - \" + this.state.topic,\r\n        Laptop: this.state.Laptop || result.Laptop,\r\n        projectorScreen: this.state.projectorScreen || result.projectorScreen,\r\n        Table: this.state.Table || result.Table,\r\n        trainingKit: this.state.trainingKit || result.trainingKit,\r\n        forkliftTrainingKit: this.state.forkliftTrainingKit || result.forkliftTrainingKit,\r\n        CPRmannequins: this.state.CPRmannequins || result.CPRmannequins,\r\n        firstAidAEDKit: this.state.firstAidAEDKit || result.firstAidAEDKit,\r\n        RespiratorFitTestKit: this.state.RespiratorFitTestKit || result.RespiratorFitTestKit,\r\n        Handouts: this.state.Handouts || result.Handouts,\r\n        costForService: result.costOfService\r\n      });\r\n    }\r\n\r\n    var result2 = this.state.listOfServices\r\n    .filter(element => element.service === this.state.service)[0];\r\n    if (result2 !== undefined && this.state.service.trim() !== \"\" && this.state.service !== \"Training\") {\r\n      document.getElementById(\"numServiceUnits\").value = result2.qty;\r\n      document.getElementById(\"costForService\").value = result2.cost;\r\n\r\n      this.setState({\r\n        service: this.state.service,\r\n        showTopics: false,\r\n        description: result2.description\r\n      });\r\n    }\r\n  };\r\n\r\n  getAvailableEquipments = () => {\r\n    //console.log(this.state.companyName);\r\n    var checkedEquipments = [];\r\n    var row = {};\r\n    if (this.state.companyName.trim() !== \"\") {\r\n      for (let i = 0; i < this.state.topicsVsEquipments.length; ++i) {\r\n        if (this.state.topicsVsEquipments[i].topic === this.state.topic) {\r\n          row = this.state.topicsVsEquipments[i];\r\n          break;\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  addContact = () => {\r\n    var item = {\r\n      newCompanyName: this.state.newCompanyName,\r\n      newContactName: this.state.newContactName,\r\n      newContactEmail: this.state.newContactEmail,\r\n      newContactOfficePhone: this.state.newContactOfficePhone,\r\n      newContactMobilePhone: this.state.newContactMobilePhone,\r\n      newContactMobilePhoneAlternate: this.state.newContactMobilePhoneAlternate,\r\n      mainContact: this.state.mainContact\r\n    };\r\n    API.newCompanyContact(item)\r\n      .then(res => {\r\n        console.log(res);\r\n        document.getElementById(\"newContactPhone\").reset();\r\n      })\r\n      .catch(err => console.log(err));\r\n\r\n    document.getElementById(\"notifyContactAdded\").style.display = \"block\";\r\n    document.getElementById(\"removeContactNotification\").style.display =\r\n      \"block\";\r\n  };\r\n\r\n  addLocation = () => {\r\n    var item = {\r\n      newCompanyName: this.state.newCompanyName,\r\n      newContactStreetAddress: this.state.newContactStreetAddress,\r\n      newContactCity: this.state.newContactCity,\r\n      newContactState: this.state.newContactState,\r\n      newContactZIP: this.state.newContactZIP,\r\n      newContactCountry: this.state.newContactCountry,\r\n      mainLocation: this.state.mainLocation\r\n    };\r\n    API.newCompanyLocation(item)\r\n      .then(res => {\r\n        console.log(res);\r\n        document.getElementById(\"newContactLocation\").reset();\r\n      })\r\n      .catch(err => console.log(err));\r\n\r\n    document.getElementById(\"notifyLocationAdded\").style.display = \"block\";\r\n    document.getElementById(\"removeLocationNotification\").style.display =\r\n      \"block\";\r\n  };\r\n\r\n  addService = () => {\r\n    var item = {\r\n      companyName: this.state.companyName,\r\n      service: this.state.service,\r\n      billable: this.state.billableService,\r\n      qty: document.getElementById(\"numServiceUnits\").value === undefined ? 0 : parseFloat(document.getElementById(\"numServiceUnits\").value),\r\n      alternateName: this.state.alternateName.length === 0 ? this.state.service : this.state.alternateName,\r\n      cost: document.getElementById(\"costForService\").value === undefined ? 0 : parseFloat(document.getElementById(\"costForService\").value),\r\n      serviceDescription: this.state.description\r\n    };\r\n\r\n    console.log(item);\r\n\r\n    API.newServiceRequest(item)\r\n      .then(res => {\r\n        console.log(res);\r\n        // this.setState({\r\n        //   topic: \"\",\r\n        //   service: \"\",\r\n        //   description: \"\",\r\n        //   costForService: 0,\r\n        //   billable: false,\r\n        //   alternateName: this.state.topic\r\n        // });\r\n      })\r\n      .catch(err => console.log(err));\r\n\r\n    //Clear all fields to add further services\r\n    document.getElementById(\"addService\").reset();\r\n  };\r\n\r\n  saveServices = () => {\r\n    API.getServiceRequests()\r\n      .then(res => {\r\n        if (this.state.service.trim() !== \"\") {\r\n          this.addService();\r\n        }\r\n        this.setState({\r\n          requestedServices : res.data\r\n        })\r\n        this.setState({\r\n          requestedServiceRows: this.getServices()\r\n        });\r\n      })\r\n      .catch(err => console.log(err));\r\n    this.toggleServiceModal();\r\n  };\r\n\r\n  getServices = () => {\r\n    return this.state.requestedServices\r\n      .filter(x => x.billable === true)\r\n      .map((x, index) => (\r\n        <tr key={\"serviceRequest\" + (index + 1)}>\r\n          <td>{x.alternateName}</td>\r\n          <td>{x.qty}</td>\r\n          <td>{x.cost.toFixed(2)}</td>\r\n          <td>${(x.qty * x.cost).toFixed(2)}</td>\r\n          {this.setState({\r\n            totalCost: this.state.totalCost + x.qty * x.cost * x.billable\r\n          })}\r\n        </tr>\r\n      ));\r\n  };\r\n\r\n  removeServices = () => {\r\n    var result = [];\r\n    API.getServiceRequests()\r\n      .then(res => {\r\n        this.setState({\r\n          requestedServices : res.data\r\n        })\r\n        console.log(\"remove services\",this.state.requestedServices);\r\n        result =  this.state.requestedServices\r\n          .map((x, index) => (\r\n            <tr key={\"serviceRequest\" + (index + 1)} id = {\"serviceRequest\" + (index + 1)}>\r\n              <td>{x.alternateName}</td>\r\n              <td>{x.qty}</td>\r\n              <td>{x.cost.toFixed(2)}</td>\r\n              <td>${(x.qty * x.cost).toFixed(2)}</td>\r\n              <td><FaTrash style = {{'color': 'red'}} onClick = {() => {\r\n                API.deleteService(x.alternateName)\r\n                .then(res => {\r\n                  this.setState({\r\n                    totalCost: this.state.totalCost - x.qty * x.cost * x.billable\r\n                  });\r\n                  })\r\n                .catch(err => console.log(err));\r\n              }}/>\r\n              </td>\r\n            </tr>\r\n          ));\r\n      })\r\n      .catch(err => console.log(err));\r\n      return result\r\n  };\r\n\r\n  getCompanies = () => {\r\n    API.getCompany()\r\n      .then(res => {\r\n        for (let i = 0; i < res.data.length; ++i) {\r\n          if (uniqueCompanies.indexOf(res.data[i].companyName) === -1 && res.data[i].companyName.trim() !== \"\") {\r\n            uniqueCompanies.push(res.data[i].companyName);\r\n          }\r\n        }\r\n        this.setState({ companyNames: uniqueCompanies });\r\n        console.log(\"Companies table loaded\");\r\n      })\r\n      .catch(err => console.log(err));\r\n  };\r\n\r\n  saveCompany = () => {\r\n    this.addContact();\r\n    this.addLocation();\r\n    var item = {\r\n      companyName: this.state.newCompanyName,\r\n      newCompanyName: this.state.newCompanyName,\r\n      newProducer: this.state.newProducer,\r\n      newAgency: this.state.newAgency,\r\n      newContractClient: this.state.newContractClient,\r\n      Laptop: this.state.Laptop,\r\n      projectorScreen: this.state.projectorScreen,\r\n      Table: this.state.Table,\r\n      trainingKit: this.state.trainingKit,\r\n      forkliftTrainingKit: this.state.forkliftTrainingKit,\r\n      CPRmannequins: this.state.CPRmannequins,\r\n      firstAidAEDKit: this.state.firstAidAEDKit,\r\n      Handouts: this.state.Handouts\r\n    };\r\n    API.newCompany(item)\r\n      .then(res => {\r\n        console.log(res);\r\n      })\r\n      .catch(err => console.log(err));\r\n\r\n    API.postCompanyEquipments(item)\r\n      .then(res => console.log(res))\r\n      .catch(err => console.log(err));\r\n\r\n    this.getCompanies();\r\n    this.toggleModal();\r\n    console.log(this.state.newCompanyName, this.state.companyName);\r\n  };\r\n\r\n  //Getting employees from server\r\n  getEmployees() {\r\n    API.getEmployees().then(function(res) {\r\n      for (let i = 0; i < res.data.length; ++i) {\r\n        employees.push(res.data[i].EMP_NAME);\r\n      }\r\n      console.log(\"employees table loaded!\");\r\n    });\r\n  }\r\n\r\n  //Generates pdf\r\n  handlePDF = () => {\r\n    var companyName = this.state.companyName;\r\n    var startDate = this.state.startDate;\r\n    var divHeight = document.getElementById(\"capture\").offsetHeight;\r\n    var divWidth = document.getElementById(\"capture\").offsetWidth;\r\n    return html2canvas(document.getElementById(\"capture\"), {\r\n      scale: 0.85,\r\n      dpi: 278\r\n    }).then(function(canvas) {\r\n      var wid = divWidth;\r\n      var hgt = divHeight;\r\n      var img = canvas.toDataURL(\r\n        \"image/png\",\r\n        (wid = canvas.width),\r\n        (hgt = canvas.height)\r\n      );\r\n      var hratio = hgt / wid;\r\n      var doc = new jsPDF(\"p\", \"mm\", \"a4\");\r\n      var width = doc.internal.pageSize.width;\r\n      var height = width * hratio;\r\n      doc.addImage(img, \"JPEG\", 20, 25, width, height);\r\n      console.log(startDate.toDate());\r\n      doc.save(\r\n        companyName + \"-Quotation-\" + startDate.format(\"MM/DD/YYYY\") + \".pdf\"\r\n      );\r\n    });\r\n  };\r\n\r\n  handleCompanyName = () => {\r\n    if (\r\n      this.state.companyName.length < 2 &&\r\n      this.state.newCompanyName.length < 2\r\n    ) {\r\n      this.setState({\r\n        validCompanyName: false\r\n      });\r\n    } else {\r\n      this.setState({\r\n        validCompanyName: true\r\n      });\r\n    }\r\n\r\n    API.getCompanyDetails(this.state.companyName)\r\n      .then(res => {\r\n        getCompanyDetails = res.data;\r\n      })\r\n      .catch(err => console.log(err));\r\n\r\n      if(this.state.companyName.trim() !== \"\"){\r\n        API.getCompanyContacts(this.state.companyName)\r\n          .then(res => {\r\n            getCompanyContacts = res.data;\r\n            this.setState({\r\n              companyMobileContacts: res.data.filter(x => x.contactMobilePhone !== \"\"),\r\n              companyOfficeContacts: res.data.filter(x => x.contactOfficePhone !== \"\")\r\n            })\r\n          })\r\n          .catch(err => console.log(err));\r\n          API.getCompanyLocations(this.state.companyName)\r\n            .then(res => {\r\n              getCompanyLocations = res.data;\r\n              this.setState({\r\n                companyLocations: res.data\r\n              })\r\n            })\r\n            .catch(err => console.log(err));\r\n      }\r\n\r\n\r\n    this.getAvailableEquipments();\r\n\r\n    API.getCompanyEquipments(this.state.companyName)\r\n      .then(res => {\r\n        if(res.data.length > 0 && this.state.companyName.length > 0 ){\r\n          var result = res.data[0];\r\n          this.setState({\r\n            Laptop: this.state.Laptop || !result.Laptop,\r\n            projectorScreen: this.state.projectorScreen || !result.projectorScreen,\r\n            Table: this.state.Table || !result.Table,\r\n            trainingKit: this.state.trainingKit || !result.trainingKit,\r\n            forkliftTrainingKit: this.state.forkliftTrainingKit || !result.forkliftTrainingKit,\r\n            CPRmannequins: this.state.CPRmannequins || !result.CPRmannequins,\r\n            firstAidAEDKit: this.state.firstAidAEDKit || !result.firstAidAEDKit,\r\n            RespiratorFitTestKit: this.state.RespiratorFitTestKit || !result.RespiratorFitTestKit,\r\n            Handouts: this.state.Handouts || !result.Handouts\r\n          });\r\n          document.getElementById('Laptop').checked = this.state.Laptop;\r\n          document.getElementById('projectorScreen').checked = this.state.projectorScreen;\r\n          document.getElementById('Table').checked = this.state.Table;\r\n          document.getElementById('trainingKit').checked = this.state.trainingKit;\r\n          document.getElementById('forkliftTrainingKit').checked = this.state.forkliftTrainingKit;\r\n          document.getElementById('CPRmannequins').checked = this.state.CPRmannequins;\r\n          document.getElementById('firstAidAEDKit').checked = this.state.firstAidAEDKit;\r\n          document.getElementById('RespiratorFitTestKit').checked = this.state.RespiratorFitTestKit;\r\n          document.getElementById('Handouts').checked = this.state.Handouts;\r\n        }\r\n      })\r\n      .catch(err => console.log(err));\r\n  };\r\n\r\n  validatePhone = () => {\r\n    var re = RegExp(/^(\\+\\d{1,2}\\s)?\\(?\\d{3}\\)?[\\s.-]\\d{3}[\\s.-]\\d{4}$/);\r\n    this.setState({\r\n      validPhone: re.test(this.state.contactPhone) || isNaN(this.state.contactPhone)\r\n    });\r\n  };\r\n\r\n  validateCellPhone = () => {\r\n    var re = RegExp(/^(\\+\\d{1,2}\\s)?\\(?\\d{3}\\)?[\\s.-]\\d{3}[\\s.-]\\d{4}$/);\r\n    this.setState({\r\n      validCellPhone: re.test(this.state.contactCellPhone) || isNaN(this.state.contactPhone)\r\n    });\r\n  };\r\n\r\n  validateEmail = () => {\r\n    var re = RegExp(\r\n      /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\r\n    );\r\n    this.setState({\r\n      validEmail: re.test(String(this.state.contactEmail).toLowerCase())\r\n    });\r\n  };\r\n\r\n  validateZIP = () => {\r\n    let zipRegex = RegExp(\"^[0-9]{5}(?:-[0-9]{4})?$\");\r\n    this.setState({\r\n      validZIP: zipRegex.test(this.state.zip)\r\n    });\r\n  };\r\n\r\n  handleChange(date) {\r\n    this.setState({\r\n      startDate: date\r\n    });\r\n    this.setState({\r\n      validThru: moment(date)\r\n        .add(90, \"days\")\r\n        .format(\"YYYY-MM-DD\")\r\n    });\r\n    document.getElementById(\"validThru\").value = moment(\r\n      this.state.validThru\r\n    ).format(\"YYYY-MM-DD\");\r\n  }\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    this.setState({\r\n      requestedServiceRows: this.getServices()\r\n    });\r\n\r\n    var item = {\r\n      companyName: this.state.companyName,\r\n      startDate: this.state.startDate,\r\n      validThru: this.state.validThru,\r\n      paymentBy: this.state.paymentForTraining,\r\n      producer: this.state.producer,\r\n      contactPerson: this.state.contactName,\r\n      contactPhone: this.state.contactPhone,\r\n      contactCellPhone: this.state.contactCellPhone,\r\n      contactEmail: this.state.contactEmail,\r\n      contactState: this.state.contactState,\r\n      contactStreetAddress: this.state.contactStreetAddress,\r\n      contactCity: this.state.contactCity,\r\n      contactZip: this.state.contactZip,\r\n      contactCountry: this.state.country,\r\n      //Equipment needed at site\r\n      Laptop: this.state.Laptop,\r\n      projectorScreen: this.state.projectorScreen,\r\n      Table: this.state.Table,\r\n      trainingKit: this.state.trainingKit,\r\n      forkliftTrainingKit: this.state.forkliftTrainingKit,\r\n      CPRmannequins: this.state.CPRmannequins,\r\n      firstAidAEDKit: this.state.firstAidAEDKit,\r\n      RespiratorFitTestKit: this.state.RespiratorFitTestKit,\r\n      Handouts: this.state.Handouts,\r\n      quotationIssuedBy: this.state.quotationIssuedBy,\r\n      instructions: this.state.instructions\r\n    };\r\n    \r\n    API.postService(item)\r\n    .then(res => {\r\n      console.log(res);\r\n      this.setState({\r\n        quotationNumber: res.data.quoteNumber,\r\n        quotationIssuedBy: res.data.quotationIssuedBy\r\n      });\r\n      API.getServiceRequests()\r\n      .then(res1 => {\r\n          console.log(res.data.quotationIssuedBy);\r\n          console.log(res1);\r\n          API.addTask({\r\n            quotationNumber: this.state.quotationNumber,\r\n            service: \"Approve quote \" + this.state.quotationNumber,\r\n            client: this.state.companyName,\r\n            instructions: this.state.instructions,\r\n            startDate: this.state.startDate, //sort\r\n            validThru: this.state.validThru,\r\n            quotationIssuedBy: res.data.quotationIssuedBy\r\n          })\r\n          .then(res2 => {\r\n            console.log(res2.data);\r\n\r\n                if(res1.data.length > 0){\r\n                  for(let i = 0; i < res1.data.length; ++i ){\r\n                    API.addTask({\r\n                      quotationNumber: this.state.quotationNumber,\r\n                      service: res1.data[i].service,\r\n                      client: res1.data[i].companyName,\r\n                      instructions: this.state.instructions,\r\n                      startDate: this.state.startDate, //sort\r\n                      validThru: this.state.validThru,\r\n                      qty: res1.data[i].qty,\r\n                      serviceDescription: res1.data[i].serviceDescription,\r\n                      quotationIssuedBy: res.data.quotationIssuedBy\r\n                    })\r\n                    .then(res3 => {console.log(\"Added a task\")})\r\n                    .catch(err => console.log(err));\r\n                  }\r\n                }\r\n                console.log(\"Deleted rows\");\r\n                console.log(\"Added a task to accept quote as well!\");\r\n                document.getElementById(\"serviceRequestForm\").reset();\r\n                this.setState({\r\n              startDate: moment(),\r\n              validThru: moment()\r\n                .add(90, \"days\")\r\n                .format(\"YYYY-MM-DD\"),\r\n                newContractClient: false,\r\n              companyName: \"\",\r\n              newCompanyName: \"\",\r\n              companyNames: services.companyName,\r\n              country: \"United States\",\r\n              topic: \"\",\r\n              service: \"\",\r\n              producer: \"\",\r\n              sameLocAsTraining: false,\r\n              validCompanyName: false,\r\n              validPhone: false,\r\n              validEmail: false,\r\n              validCellPhone: false,\r\n              validZIP: false,\r\n              contactName: \"\",\r\n              contactPhone: \"\",\r\n              contactCellPhone: \"\",\r\n              contactEmail: \"\",\r\n              state: \"\",\r\n              streetAddress: \"\",\r\n              city: \"\",\r\n              zip: \"\",\r\n              contactStreetAddress: \"\",\r\n              contactZip: \"\",\r\n              contactCountry: \"United States\",\r\n              contactState: \"\",\r\n              contactCity: \"\",\r\n              //equipmentsForSite: [\"Laptop\", \"Projector Screen\", \"TV monitor\", \"Table\", \"Electrical power socket with extension cord\"],\r\n              equipmentsSelectedSite: [],\r\n              equipmentsSelectedTraining: [],\r\n              //equipmentsForTraining : [\"Laptop\", \"Projector Screen\", \"TV monitor\", \"Table\", \"Electrical power socket with extension cord\", \"Forklift training kit\", \"CPR mannequins\", \"First aid training bag\", \"AED training device\", \"Handouts\"],\r\n              equipments: [\r\n                \"Laptop\",\r\n                \"Projector Screen\",\r\n                \"Table\",\r\n                \"Training Kit (Green Duffle Bag)\",\r\n                \"Forklift Training Kit (Grey Duffle Bag)\",\r\n                \"CPR mannequins\",\r\n                \"First Aid & AED Kit (Red Backpack)\",\r\n                \"Handouts\"\r\n              ],\r\n              Laptop: false,\r\n              projectorScreen: false,\r\n              Table: false,\r\n              trainingKit: false,\r\n              forkliftTrainingKit: false,\r\n              CPRmannequins: false,\r\n              firstAidAEDKit: false,\r\n              RespiratorFitTestKit: false,\r\n              Handouts: false,\r\n              active: true,\r\n              addOn: \"\",\r\n              error: {},\r\n              modal: false,\r\n              quotationIssuedBy: \"\",\r\n              instructions: \"\",\r\n              serviceModal: false,\r\n              billableService: true,\r\n              alternateName: \"\",\r\n              costForService: 0.0,\r\n              requestedServices: [],\r\n              requestedServiceRows: [],\r\n              viewServiceRows: [],\r\n              totalCost: 0,\r\n              viewServiceModal: false,\r\n              showTopics: false,\r\n              popoverOpen: false,\r\n              description: \"\",\r\n              companyMobileContacts: [],\r\n              companyOfficeContacts: [],\r\n              companyLocations: [],\r\n              listOfServices: [],\r\n              additionalEquipments: [],\r\n              quotationNumber: \"\"\r\n            });\r\n            API.deleteServiceRequests()\r\n          .then(() => {\r\n            console.log(\"Refresh services table\");\r\n          })\r\n          .catch(err => console.log(err));\r\n          })\r\n              .catch(err => console.log(err));\r\n            \r\n            })\r\n            .catch(err => console.log(err));\r\n\r\n            \r\n        })\r\n        .catch(err => console.log(err));\r\n        \r\n  };\r\n\r\n  handleInputChange = e => {\r\n    const { name, value } = e.target;\r\n    this.setState({\r\n      [name]: value\r\n    });\r\n    this.validateEmail();\r\n    this.validateZIP();\r\n    this.validatePhone();\r\n    this.validateCellPhone();\r\n    this.handleCompanyName();\r\n    this.setState({\r\n      active: true\r\n      //((this.state.validCellPhone !== \"undefined\" && this.state.validCellPhone === true) || (this.state.validEmail !== \"undefined\" && this.state.validEmail === true) || (this.state.validPhone !== \"undefined\" && this.state.validPhone === true)) || this.state.validZIP && this.state.validCompanyName\r\n    });\r\n  };\r\n\r\n  toggleModal() {\r\n    this.setState({\r\n      modal: !this.state.modal\r\n    });\r\n  }\r\n\r\n  toggleServiceModal() {\r\n    this.setState({\r\n      serviceModal: !this.state.serviceModal\r\n    });\r\n  }\r\n\r\n  toggleViewServicesModal = () => {\r\n    this.setState({\r\n      viewServiceModal: !this.state.viewServiceModal,\r\n      viewServiceRows: this.removeServices() != undefined ? this.removeServices() : []\r\n    });\r\n    \r\n  };\r\n\r\n  togglePopOver() {\r\n    this.setState({\r\n      popoverOpen: !this.state.popoverOpen\r\n    });\r\n  }\r\n\r\n  viewServiceModal = () => {\r\n    this.setState({\r\n      viewServiceRows: this.removeServices() != undefined ? this.removeServices() : []\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <img\r\n          src=\"./open3.jpg\"\r\n          alt=\"Construction workers\"\r\n          className=\"openingImage\"\r\n        />\r\n\r\n        <Container className=\"mt-3\">\r\n          <Form id=\"serviceRequestForm\">\r\n          <FormGroup>\r\n              <Label for=\"quotationIssuedBy\">Quotation Issued By</Label>\r\n              <Input\r\n                type=\"select\"\r\n                name=\"quotationIssuedBy\"\r\n                id=\"quotationIssuedBy\"\r\n                onChange={this.handleInputChange}\r\n              >\r\n              <option value=\"\">Choose Quotation Issued By</option>\r\n                {employees.map((x, index) => (\r\n                  <option key={\"emp\" + index} value={x}>\r\n                    {x}\r\n                  </option>\r\n                ))}\r\n              </Input>\r\n            </FormGroup>\r\n\r\n            <FormGroup>\r\n              <Label for=\"companyName\">Company Name</Label>\r\n              <Input\r\n                type=\"select\"\r\n                name=\"companyName\"\r\n                id=\"companyNameSelect\"\r\n                onChange={this.handleInputChange}\r\n                onClick={this.handleCompanyName}\r\n              >\r\n                <option>Select company name</option>\r\n                {services.companyNames.map(option => (\r\n                    <option>{option}</option>\r\n                  ))}\r\n              </Input>\r\n              <Label for=\"newCompanyName\">New Company?</Label>\r\n              <div>\r\n                <Button color=\"secondary\" onClick={this.toggleModal}>\r\n                  Add new company\r\n                </Button>\r\n                <Modal\r\n                  isOpen={this.state.modal}\r\n                  toggle={this.toggleModal}\r\n                  className={this.props.className}\r\n                >\r\n                  <ModalHeader toggle={this.toggleModal}>\r\n                    Enter new company details\r\n                  </ModalHeader>\r\n                  <ModalBody>\r\n                    <Form>\r\n                      <FormGroup>\r\n                        <Label for=\"newCompanyName\">Company Name</Label>\r\n                        <Input\r\n                          type=\"text\"\r\n                          name=\"newCompanyName\"\r\n                          id=\"newCompanyName\"\r\n                          placeholder=\"Enter company name\"\r\n                          onChange={this.handleInputChange}\r\n                        />\r\n\r\n                        <Label for=\"newProducer\">Producer</Label>\r\n                        <Input\r\n                          type=\"text\"\r\n                          name=\"newProducer\"\r\n                          id=\"newProducer\"\r\n                          placeholder=\"Enter producer's name\"\r\n                          onChange={this.handleInputChange}\r\n                        />\r\n\r\n                        <Label for=\"newAgency\">Agency</Label>\r\n                        <Input\r\n                          type=\"text\"\r\n                          name=\"newAgency\"\r\n                          id=\"newAgency\"\r\n                          placeholder=\"Enter agency's name\"\r\n                          onChange={this.handleInputChange}\r\n                        />\r\n\r\n                        <Label for=\"newContractClient\">Contract Clients</Label>\r\n                        <br />\r\n                        <input\r\n                          type=\"checkbox\"\r\n                          id=\"newContractClient\"\r\n                          name=\"newContractClient\"\r\n                          value={this.state.newContractClient}\r\n                          defaultChecked={this.state.newContractClient}\r\n                          onClick={() =>\r\n                            this.setState({\r\n                              newContractClient: !this.state.newContractClient\r\n                            })\r\n                          }\r\n                        />\r\n                        <br />\r\n                      </FormGroup>\r\n                      <hr />\r\n\r\n                      <Form id=\"newContactPhone\">\r\n                        <FormGroup>\r\n                          <Label for=\"newContactName\">Contact Name</Label>\r\n                          <Input\r\n                            type=\"text\"\r\n                            name=\"newContactName\"\r\n                            id=\"newContactName\"\r\n                            placeholder=\"Enter contact's name\"\r\n                            onChange={this.handleInputChange}\r\n                          />\r\n                        </FormGroup>\r\n                        <FormGroup>\r\n                          <Label for=\"newContactEmail\">Contact Email ID</Label>\r\n                          <Input\r\n                            type=\"text\"\r\n                            name=\"newContactEmail\"\r\n                            id=\"newContactEmail\"\r\n                            placeholder=\"Enter contact's email ID\"\r\n                            onChange={this.handleInputChange}\r\n                          />\r\n                        </FormGroup>\r\n                        <FormGroup>\r\n                          <Label for=\"newContactOfficeNumber\">\r\n                            Contact Office Number\r\n                          </Label>\r\n                          <Input\r\n                            type=\"text\"\r\n                            name=\"newContactOfficePhone\"\r\n                            id=\"newContactOfficePhone\"\r\n                            placeholder=\"Enter contact's office phone number\"\r\n                            onChange={this.handleInputChange}\r\n                          />\r\n                        </FormGroup>\r\n                        <FormGroup>\r\n                          <Label for=\"newContactMobilePhone\">\r\n                            Contact Mobile Number\r\n                          </Label>\r\n                          <Input\r\n                            type=\"text\"\r\n                            name=\"newContactMobilePhone\"\r\n                            id=\"newContactMobilePhone\"\r\n                            placeholder=\"Enter contact's mobile number\"\r\n                            onChange={this.handleInputChange}\r\n                          />\r\n                        </FormGroup>\r\n                        <FormGroup>\r\n                          <Label for=\"newContactMobileAlternate\">\r\n                            Contact Alternate Mobile Number\r\n                          </Label>\r\n                          <Input\r\n                            type=\"text\"\r\n                            name=\"newContactMobilePhoneAlternate\"\r\n                            id=\"newContactMobilePhoneAlternate\"\r\n                            placeholder=\"Enter contact's alternate mobile number\"\r\n                            onChange={this.handleInputChange}\r\n                          />\r\n                        </FormGroup>\r\n                        <FormGroup>\r\n                          <Label for=\"mainContact\">\r\n                            Is this the main contact?\r\n                          </Label>\r\n                          <br />\r\n                          <input\r\n                            type=\"checkbox\"\r\n                            id=\"check\"\r\n                            name=\"mainContact\"\r\n                            value={this.state.mainContact}\r\n                            defaultChecked={this.state.mainContact}\r\n                            onClick={() =>\r\n                              this.setState({\r\n                                mainContact: !this.state.mainContact\r\n                              })\r\n                            }\r\n                          />\r\n                        </FormGroup>\r\n                        <br />\r\n                        <b style={styles.note}>\r\n                          Click on the plus icon to add more contacts\r\n                        </b>{\" \"}\r\n                        <br />\r\n                        <div style={styles.FaPlus}>\r\n                          <FaPlus onClick={this.addContact} />\r\n                        </div>\r\n                        <span>\r\n                          <div id=\"notifyContactAdded\" style={styles.notify}>\r\n                            New contact has been added!\r\n                          </div>\r\n                          <div\r\n                            id=\"removeContactNotification\"\r\n                            style={styles.removeContactNotification}\r\n                            onClick={() => {\r\n                              document.getElementById(\r\n                                \"removeContactNotification\"\r\n                              ).style.display = \"none\";\r\n                              document.getElementById(\r\n                                \"notifyContactAdded\"\r\n                              ).style.display = \"none\";\r\n                            }}\r\n                          >\r\n                            x\r\n                          </div>\r\n                        </span>\r\n                      </Form>\r\n\r\n                      <hr />\r\n\r\n                      <Form id=\"newContactLocation\">\r\n                        <Label>Company Locations</Label> <br />\r\n                        <Label for=\"mainLocation\">\r\n                          Is this the main office location?\r\n                        </Label>\r\n                        <br />\r\n                        <input\r\n                          type=\"checkbox\"\r\n                          id=\"check\"\r\n                          name=\"mainLocation\"\r\n                          value={this.state.mainLocation}\r\n                          defaultChecked={this.state.mainLocation}\r\n                          onClick={() =>\r\n                            this.setState({\r\n                              mainLocation: !this.state.mainLocation\r\n                            })\r\n                          }\r\n                        />\r\n                        <br />\r\n                        <Label for=\"newContactStreetAddress\">\r\n                          Street Address\r\n                        </Label>\r\n                        <Input\r\n                          type=\"text\"\r\n                          name=\"newContactStreetAddress\"\r\n                          id=\"newContactStreetAddress\"\r\n                          placeholder=\"Enter street address\"\r\n                          onChange={this.handleInputChange}\r\n                        />\r\n                        <Label for=\"newContactCity\">City</Label>\r\n                        <Input\r\n                          type=\"text\"\r\n                          name=\"newContactCity\"\r\n                          id=\"newContactCity\"\r\n                          placeholder=\"Enter name of city\"\r\n                          onChange={this.handleInputChange}\r\n                        />\r\n                        <Label for=\"newContactState\">State</Label>\r\n                        <Input\r\n                          type=\"text\"\r\n                          name=\"newContactState\"\r\n                          id=\"newContactState\"\r\n                          placeholder=\"Enter name of state\"\r\n                          onChange={this.handleInputChange}\r\n                        />\r\n                        <Label for=\"newContactZIP\">ZIP code</Label>\r\n                        <Input\r\n                          type=\"text\"\r\n                          name=\"newContactZIP\"\r\n                          id=\"newContactZIP\"\r\n                          placeholder=\"Enter ZIP code\"\r\n                          onChange={this.handleInputChange}\r\n                        />\r\n                        <Label for=\"newContactCountry\">Country</Label>\r\n                        <Input\r\n                          type=\"text\"\r\n                          name=\"newContactCountry\"\r\n                          id=\"newContactCountry\"\r\n                          placeholder=\"Enter name of country\"\r\n                          onChange={this.handleInputChange}\r\n                        />\r\n                        <b style={styles.note}>\r\n                          Click on the plus icon to add more locations\r\n                        </b>\r\n                        <br />\r\n                        <div style={styles.FaPlus}>\r\n                          <FaPlus onClick={this.addLocation} />{\" \"}\r\n                        </div>\r\n                        <span>\r\n                          <div id=\"notifyLocationAdded\" style={styles.notify}>\r\n                            New location has been added!\r\n                          </div>\r\n                          <div\r\n                            id=\"removeLocationNotification\"\r\n                            style={styles.removeContactNotification}\r\n                            onClick={() => {\r\n                              document.getElementById(\r\n                                \"removeLocationNotification\"\r\n                              ).style.display = \"none\";\r\n                              document.getElementById(\r\n                                \"notifyLocationAdded\"\r\n                              ).style.display = \"none\";\r\n                            }}\r\n                          >\r\n                            x\r\n                          </div>\r\n                        </span>\r\n                      </Form>\r\n\r\n                      <hr />\r\n\r\n                      <Form id=\"equipmentsAlwaysAvailable\">\r\n                        <Label for=\"equipmentsAlwaysAvailable\">\r\n                          Equipments already available on site\r\n                        </Label>\r\n                        {equipmentsAlwaysOnSite.map((x, index) => (\r\n                          <div>\r\n                            <input\r\n                              type=\"checkbox\"\r\n                              id={equipmentIDs[index]}\r\n                              name={x}\r\n                              onClick={this.handleInputChange}\r\n                            />{\" \"}\r\n                            {x}\r\n                          </div>\r\n                        ))}\r\n                      </Form>\r\n                    </Form>\r\n                  </ModalBody>\r\n                  <ModalFooter>\r\n                    <Button color=\"primary\" onClick={this.saveCompany}>\r\n                      Save company\r\n                    </Button>\r\n                    <Button color=\"secondary\" onClick={this.toggleModal}>\r\n                      Cancel\r\n                    </Button>\r\n                  </ModalFooter>\r\n                </Modal>\r\n              </div>\r\n\r\n              {this.state.validCompanyName ? (\r\n                <FaCheckCircle style={styles.FaCheck} />\r\n              ) : (\r\n                <FaTimesCircle style={styles.FaTimes} />\r\n              )}\r\n            </FormGroup>\r\n            <FormGroup>\r\n              <Label for=\"dateOfRequest\">Date of Request</Label>\r\n              <DatePicker\r\n                selected={this.state.startDate}\r\n                onChange={this.handleChange}\r\n                name=\"startDate\"\r\n                placeholder=\"Enter date of request\"\r\n              />\r\n            </FormGroup>\r\n            <FormGroup>\r\n              <Label for=\"validThru\">Request valid until (YYYY-MM-DD)</Label>\r\n              <Input\r\n                type=\"text\"\r\n                name=\"validThru\"\r\n                id=\"validThru\"\r\n                placeholder=\"Quote valid till YYYY-MM-DD\"\r\n                value={this.state.validThru}\r\n                onChange={this.handleInputChange}\r\n              />\r\n            </FormGroup>\r\n            <FormGroup>\r\n              <Label for=\"paymentForTraining\">\r\n                Who is paying for the Service?\r\n              </Label>\r\n              <Input\r\n                type=\"select\"\r\n                name=\"paymentForTraining\"\r\n                id=\"paymentForTraining\"\r\n                onChange={this.handleInputChange}\r\n              >\r\n                <option name=\"paymentForTraining\" value={\"\"}>\r\n                  Choose an option\r\n                </option>\r\n                <option name=\"paymentForTraining\" value={\"Producer\"}>\r\n                  Producer\r\n                </option>\r\n                <option name=\"paymentForTraining\" value={\"Contract\"}>\r\n                  Contract\r\n                </option>\r\n                <option name=\"paymentForTraining\" value={\"Direct Sale\"}>\r\n                  Direct Sale\r\n                </option>\r\n                <option name=\"paymentForTraining\" value={\"ARCA\"}>\r\n                  ARCA\r\n                </option>\r\n              </Input>\r\n              {this.state.paymentForTraining ? (\r\n                <FaCheckCircle style={styles.FaCheck} />\r\n              ) : (\r\n                <FaTimesCircle style={styles.FaTimes} />\r\n              )}\r\n            </FormGroup>\r\n            <FormGroup>\r\n              <Label for=\"producer\">Producer</Label>\r\n              <Input\r\n                type=\"select\"\r\n                name=\"producer\"\r\n                id=\"producer\"\r\n                onChange={this.handleInputChange}\r\n              >\r\n                <option>Choose producer</option>\r\n                {getCompanyDetails.map(x => (\r\n                  <option name=\"producer\" value={x.producer}>\r\n                    {x.producer}\r\n                  </option>\r\n                ))}\r\n              </Input>\r\n              <Label for=\"producer\">Producer not listed? Enter here</Label>\r\n              <Input\r\n                type=\"text\"\r\n                name=\"producer\"\r\n                id=\"producer\"\r\n                placeholder=\"Enter other producer's name\"\r\n                onChange={this.handleInputChange}\r\n              />\r\n            </FormGroup>\r\n            <Form>\r\n              <Label for=\"topic\">Add Services</Label>\r\n              <div>\r\n                <Button color=\"primary\" onClick={this.toggleServiceModal}>\r\n                  Add Services\r\n                </Button>\r\n                <Modal\r\n                  isOpen={this.state.serviceModal}\r\n                  toggle={this.toggleServiceModal}\r\n                  className={this.props.className}\r\n                >\r\n                  <ModalHeader toggle={this.toggleServiceModal}>\r\n                    Add Services\r\n                  </ModalHeader>\r\n                  <ModalBody>\r\n                    <Form id=\"addService\">\r\n                    <FormGroup>\r\n                      <Label for=\"service\">Services</Label>\r\n                      <Input\r\n                          type=\"select\"\r\n                          name=\"service\"\r\n                          id=\"service\"\r\n                          onChange={this.handleInputChange}\r\n                          onClick = {() => {\r\n                            if(this.state.service === \"Training\"){\r\n                              this.setState({\r\n                                showTopics: true\r\n                              });\r\n                            }\r\n                            else{\r\n                              this.setState({\r\n                                showTopics: false\r\n                              });\r\n                            }\r\n                            this.getPriceAndQuantity();\r\n                          }}\r\n                        >\r\n                          <option name=\"service\" value={\"\"}>\r\n                            Choose a service\r\n                          </option>\r\n                          <option name = \"Training\" value=\"Training\" onClick = {() => {\r\n                            this.setState({showTopics: true});\r\n                          }}>Training</option>\r\n                          {this.state.listOfServices.map(x => (\r\n                            <option value={x.service}>\r\n                              {x.service}\r\n                            </option>\r\n                          ))}\r\n                        </Input>\r\n                        {(this.state.service === \"\") ? <div>\r\n                        <Label for=\"newService\">New Service? Enter it here</Label>\r\n                        <Input\r\n                          type=\"text\"\r\n                          name=\"service\"\r\n                          id=\"service\"\r\n                          onChange={this.handleInputChange}\r\n                          placeholder = \"Enter New Service's Name\"\r\n                        />\r\n                        <Label for=\"newServiceDescription\">Enter new service's description</Label>\r\n                        <Input\r\n                          type=\"textarea\"\r\n                          name=\"description\"\r\n                          id=\"description\"\r\n                          onChange={this.handleInputChange}\r\n                          placeholder = \"Enter New Service's Description\"\r\n                        />\r\n                        <Label for=\"newServiceCostPerUnit\">Enter new service's cost per unit</Label>\r\n                        <Input\r\n                          type=\"text\"\r\n                          name=\"costForService\"\r\n                          id=\"costForService\"\r\n                          onChange={this.handleInputChange}\r\n                          placeholder = \"Enter New Service's cost per unit\"\r\n                        />\r\n                        </div> : <div>\r\n                        <br/>\r\n                      <Button id=\"Popover1\" onClick={this.togglePopOver}>\r\n                        Read more about the Service\r\n                      </Button>\r\n                      <Popover placement=\"bottom\" isOpen={this.state.popoverOpen} target=\"Popover1\" toggle={this.togglePopOver}>\r\n                        <PopoverHeader id = \"serviceName\">{this.state.service}</PopoverHeader>\r\n                        <PopoverBody id = \"description\">{this.state.description}</PopoverBody>\r\n                      </Popover>\r\n                      </div>}\r\n                        \r\n                    </FormGroup>\r\n                    {this.state.showTopics === true? <div>\r\n                      <FormGroup>\r\n                        <Label for=\"topic\">Topic</Label>\r\n                        <Input\r\n                          type=\"select\"\r\n                          name=\"topic\"\r\n                          id=\"topic\"\r\n                          onChange={this.handleInputChange}\r\n                          onClick={this.getPriceAndQuantity}\r\n                        >\r\n                          <option name=\"topic\" value={\"\"}>\r\n                            Choose a topic\r\n                          </option>\r\n                          {this.state.topicsVsEquipments.map(x => (\r\n                            <option name=\"topic\" value={x.topic}>\r\n                              {x.topic}\r\n                            </option>\r\n                          ))}\r\n                        </Input>\r\n                        {this.state.topic.length > 0 &&\r\n                        this.state.topic !== \"Other\" ? (\r\n                          <FaCheckCircle style={styles.FaCheck} />\r\n                        ) : (\r\n                          <FaTimesCircle style={styles.FaTimes} />\r\n                        )}\r\n                      </FormGroup>\r\n\r\n                      <FormGroup>\r\n                        <Label for=\"newtopic\">\r\n                          New Topic? Enter the topic below\r\n                        </Label>{\" \"}\r\n                        <br />\r\n                        <Input\r\n                          type=\"text\"\r\n                          name=\"topic\"\r\n                          id=\"newTopic\"\r\n                          placeholder=\"Enter new topic's name\"\r\n                          onChange={this.handleInputChange}\r\n                        />\r\n                      </FormGroup>\r\n                      </div> : \"\"}\r\n                      <br/>\r\n                      <FormGroup>\r\n                        <Label for=\"billable\">Billable Service</Label> <br />\r\n                        <input\r\n                          type=\"checkbox\"\r\n                          id=\"billable\"\r\n                          name=\"billableService\"\r\n                          value={this.state.billableService}\r\n                          defaultChecked\r\n                          onClick={() =>\r\n                            this.setState({\r\n                              billableService: !this.state.billableService\r\n                            })\r\n                          }\r\n                        />\r\n                      </FormGroup>\r\n\r\n                      <FormGroup>\r\n                        <Label for=\"costForService\">Cost for Service</Label>{\" \"}\r\n                        <br />\r\n                        <Input\r\n                          type=\"text\"\r\n                          name=\"costForService\"\r\n                          id=\"costForService\"\r\n                          placeholder=\"Enter the cost for the service\"\r\n                          onChange={this.handleInputChange}\r\n                        />\r\n                      </FormGroup>\r\n\r\n                      <FormGroup>\r\n                        <Label for=\"alternateNameForService\">\r\n                          Alternate Name For Service\r\n                        </Label>{\" \"}\r\n                        <br />\r\n                        <Input\r\n                          type=\"text\"\r\n                          name=\"alternateName\"\r\n                          id=\"alternateNameForService\"\r\n                          placeholder=\"Enter alternate name for service\"\r\n                          onChange={this.handleInputChange}\r\n                        />\r\n                      </FormGroup>\r\n\r\n                      <FormGroup>\r\n                        <Label for=\"durationInMin\">\r\n                          Duration of Service in Minutes\r\n                        </Label>{\" \"}\r\n                        <br />\r\n                        <Input\r\n                          type=\"text\"\r\n                          name=\"durationInMin\"\r\n                          id=\"durationInMin\"\r\n                          placeholder=\"Enter duration of service in minutes\"\r\n                          onChange={this.handleInputChange}\r\n                        />\r\n                      </FormGroup>\r\n\r\n                      <FormGroup>\r\n                        <Label for=\"quantity\">Number of Units of Service</Label>{\" \"}\r\n                        <br />\r\n                        <Input\r\n                          type=\"text\"\r\n                          name=\"numServiceUnits\"\r\n                          id=\"numServiceUnits\"\r\n                          placeholder=\"Enter number of service units\"\r\n                          onChange={this.handleInputChange}\r\n                        />\r\n                      </FormGroup>\r\n                      <Button color=\"secondary\" onClick={this.addService}>\r\n                        Enter another service\r\n                      </Button>\r\n                    </Form>\r\n                  </ModalBody>\r\n                  <ModalFooter>\r\n                    <Button color=\"primary\" onClick={this.saveServices}>\r\n                      Save Services\r\n                    </Button>{\" \"}\r\n                    <Button color=\"secondary\" onClick={this.toggleServiceModal}>\r\n                      Close\r\n                    </Button>\r\n                  </ModalFooter>\r\n                </Modal>\r\n              </div>\r\n              <br />\r\n            </Form>\r\n            {this.state.topic === \"Training\" ? (\r\n              <FormGroup className=\"training\" id=\"training\">\r\n                <Label for=\"address\">Address of Training</Label>\r\n                <br />\r\n                <Label for=\"streetAddress\">Street Address</Label>\r\n                <Input\r\n                  type=\"text\"\r\n                  name=\"streetAddress\"\r\n                  id=\"streetAddress\"\r\n                  placeholder=\"Street Address\"\r\n                  onChange={this.handleInputChange}\r\n                />\r\n                <Label for=\"zip\">ZIP</Label>\r\n                <Input\r\n                  type=\"text\"\r\n                  name=\"zip\"\r\n                  id=\"zip\"\r\n                  placeholder=\"ZIP\"\r\n                  onChange={this.handleInputChange}\r\n                />\r\n                {this.state.validZIP > 0 ? (\r\n                  <FaCheckCircle style={styles.FaCheck} />\r\n                ) : (\r\n                  <FaTimesCircle style={styles.FaTimes} />\r\n                )}\r\n                <br />\r\n                <Label for=\"country\">Country</Label>\r\n                <Input\r\n                  type=\"select\"\r\n                  name=\"country\"\r\n                  id=\"country\"\r\n                  onChange={this.handleInputChange}\r\n                >\r\n                  <option>United States</option>\r\n                  {Object.keys(cities).map(country => (\r\n                    <option>{country}</option>\r\n                  ))}\r\n                </Input>\r\n                <Label for=\"state\">State</Label>\r\n                <Input\r\n                  type=\"select\"\r\n                  name=\"state\"\r\n                  id=\"state\"\r\n                  onChange={this.handleInputChange}\r\n                >\r\n                  <option>Arizona</option>\r\n                  {us_states.map(state => (\r\n                    <option>{state}</option>\r\n                  ))}\r\n                </Input>\r\n                <Label for=\"city\">City</Label>\r\n                <Input\r\n                  type=\"text\"\r\n                  name=\"city\"\r\n                  id=\"city\"\r\n                  placeholder=\"Enter City\"\r\n                  onChange={this.handleInputChange}\r\n                />\r\n\r\n                <Label for=\"langOfTraining\">Language of training</Label>\r\n                <Input\r\n                  type=\"select\"\r\n                  name=\"langTraining\"\r\n                  id=\"langTraining\"\r\n                  onChange={this.handleInputChange}\r\n                >\r\n                  <option name=\"langTraining\" value=\"\">\r\n                    Choose a language of training\r\n                  </option>\r\n                  <option name=\"langTraining\" value=\"English\">\r\n                    English\r\n                  </option>\r\n                  <option name=\"langTraining\" value=\"Spanish\">\r\n                    Spanish\r\n                  </option>\r\n                  <option name=\"langTraining\" value=\"Bilingual\">\r\n                    Bilingual\r\n                  </option>\r\n                </Input>\r\n\r\n                <Label for=\"numStudents\">Number of students</Label>\r\n                <Input\r\n                  type=\"text\"\r\n                  name=\"numStudents\"\r\n                  id=\"numStudents\"\r\n                  placeholder=\"Enter number of students\"\r\n                  onChange={this.handleInputChange}\r\n                />\r\n              </FormGroup>\r\n            ) : (\r\n              \"\"\r\n            )}\r\n            <FormGroup>\r\n              <Label for=\"contactName\">Contact Person's Name</Label>\r\n              <Input\r\n                type=\"select\"\r\n                name=\"contactName\"\r\n                id=\"contactName\"\r\n                placeholder=\"Enter contact name\"\r\n                onChange={this.handleInputChange}\r\n              >\r\n                <option key={\"contactPerson\"} value={\"\"}>\r\n                  Choose contact person's name\r\n                </option>\r\n                {getCompanyContacts.map((x, index) => (\r\n                  <option key={\"contact person\" + index} value={x.contactName}>\r\n                    {x.contactName}\r\n                  </option>\r\n                ))}\r\n              </Input>\r\n              <Label for=\"contactName\">\r\n                Name of contact not listed? Enter it here\r\n              </Label>\r\n              <Input\r\n                type=\"text\"\r\n                name=\"contactName\"\r\n                id=\"contactNameNew\"\r\n                placeholder=\"Enter other contact's name\"\r\n                onChange={this.handleInputChange}\r\n              />\r\n            </FormGroup>\r\n            <FormGroup>\r\n              <Label for=\"contactEmail\">Contact Person's Email</Label>\r\n              <Input\r\n                type=\"select\"\r\n                name=\"contactEmail\"\r\n                id=\"contactEmail\"\r\n                placeholder=\"Valid email format example@test.com\"\r\n                onChange={this.handleInputChange}\r\n              >\r\n                <option key={\"contactEmail\"} value={\"\"}>\r\n                  Choose contact person's email\r\n                </option>\r\n                {getCompanyContacts.map((x, index) => (\r\n                  <option\r\n                    key={\"contact_person_email\" + index}\r\n                    value={x.contactEmail}\r\n                  >\r\n                    {x.contactEmail}\r\n                  </option>\r\n                ))}\r\n              </Input>\r\n              <Label for=\"contactEmail\">Email not listed? Enter it here</Label>\r\n              <Input\r\n                type=\"text\"\r\n                name=\"contactEmail\"\r\n                id=\"contactEmailNew\"\r\n                placeholder=\"Enter other contact's email ID\"\r\n                onChange={this.handleInputChange}\r\n              />\r\n              {this.state.validEmail ? (\r\n                <FaCheckCircle style={styles.FaCheck} />\r\n              ) : (\r\n                <FaTimesCircle style={styles.FaTimes} />\r\n              )}\r\n            </FormGroup>\r\n            <FormGroup>\r\n              <Label for=\"contactPhone\">Contact Person's Contact Number</Label>\r\n              <br />\r\n              <Input\r\n                type=\"select\"\r\n                name=\"contactPhone\"\r\n                id=\"contactPhone\"\r\n                placeholder=\"Valid phone format example +1 (999) 999-999\"\r\n                onChange={this.handleInputChange}\r\n              >\r\n              <option value=\"\">Choose Office Number</option>\r\n              {this.state.companyOfficeContacts.map(x => <option value={x.contactOfficePhone}>{x.contactOfficePhone}</option>)}\r\n              </Input>\r\n              <Label for=\"contactPhone\">Contact Person's Office Number not listed? Enter it here</Label>\r\n              <br />\r\n              <Input\r\n                type=\"text\"\r\n                name=\"contactPhone\"\r\n                id=\"contactPhoneNew\"\r\n                placeholder=\"Valid phone format example +1 (999) 999-999\"\r\n                onChange={this.handleInputChange}\r\n              />\r\n              {this.state.validPhone ? (\r\n                <FaCheckCircle style={styles.FaCheck} />\r\n              ) : (\r\n                <FaTimesCircle style={styles.FaTimes} />\r\n              )}\r\n            </FormGroup>\r\n            <FormGroup>\r\n              <Label for=\"contactCell\">\r\n                Contact Person's Cell phone number\r\n              </Label>\r\n              <Input\r\n                type=\"select\"\r\n                name=\"contactCellPhone\"\r\n                id=\"contactCellPhone\"\r\n                placeholder=\"Valid phone format example +1 (999) 999-999\"\r\n                onChange={this.handleInputChange}\r\n              >\r\n              <option value=\"\">Choose Mobile Phone</option>\r\n              {this.state.companyMobileContacts.map(x => <option value={x.contactMobilePhone}>{x.contactMobilePhone}</option>)}\r\n              </Input>\r\n              <Label for=\"contactCell\">\r\n                Contact Person's Cell phone number not listed? Enter it here\r\n              </Label>\r\n              <Input\r\n                type=\"text\"\r\n                name=\"contactCellPhone\"\r\n                id=\"contactCellPhone\"\r\n                placeholder=\"Valid phone format example +1 (999) 999-999\"\r\n                onChange={this.handleInputChange}\r\n              />\r\n              {this.state.validCellPhone ? (\r\n                <FaCheckCircle style={styles.FaCheck} />\r\n              ) : (\r\n                <FaTimesCircle style={styles.FaTimes} />\r\n              )}\r\n            </FormGroup>\r\n            <div>\r\n              {this.state.topic === \"Training\" ? (\r\n                <div>\r\n                  <Label for=\"sameLocAsTraining\">\r\n                    Same Location as Training?{\" \"}\r\n                  </Label>\r\n                  <br />\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    id=\"check\"\r\n                    name=\"sameLocAsTraining\"\r\n                    value={this.state.sameLocAsTraining}\r\n                    defaultChecked = {false}\r\n                    onChange={this.handleInputChange}\r\n                    onClick={e => {\r\n                      this.setState({\r\n                        sameLocAsTraining: !this.state.sameLocAsTraining\r\n                      });\r\n                      if (this.state.sameLocAsTraining) {\r\n                        this.setState({\r\n                          contactStreetAddress: this.state.contactStreetAddress,\r\n                          contactZip: this.state.contactZip,\r\n                          contactCountry: this.state.contactCountry,\r\n                          contactState: this.state.contactState,\r\n                          contactCity: this.state.contactCity\r\n                        });\r\n                      }\r\n                    }}\r\n                  />\r\n                </div>\r\n              ) : (\r\n                \"\"\r\n              )}\r\n              <br />\r\n              {this.state.sameLocAsTraining ? (\r\n                \"\"\r\n              ) : (\r\n                <FormGroup className=\"training\" id=\"training\">\r\n                  <Label for=\"address\">Contact Address</Label>\r\n                  <br />\r\n                  <Label for=\"streetAddress\">Street Address</Label>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"contactStreetAddress\"\r\n                    id=\"contactStreetAddress\"\r\n                    placeholder=\"Street Address\"\r\n                    onChange={this.handleInputChange}>\r\n                    <option value=\"\">Choose Street Address</option>\r\n                    {this.state.companyLocations.filter(x => x.contactStreetAddress !== undefined || x.contactStreetAddress.trim() !== \"\").map(\r\n                      y => <option value={y.contactStreetAddress}>{y.contactStreetAddress}</option>\r\n                    )}\r\n                  </Input>\r\n                  <Label for=\"streetAddress\">Contact Street Address not listed? Enter it here</Label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    name=\"contactStreetAddress\"\r\n                    id=\"contactStreetAddress\"\r\n                    placeholder=\"Street Address\"\r\n                    onChange={this.handleInputChange}\r\n                  />\r\n                  <Label for=\"contactZip\">ZIP</Label>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"contactZip\"\r\n                    id=\"contactZip\"\r\n                    placeholder=\"ZIP code\"\r\n                    onChange={this.handleInputChange}>\r\n                    <option value=\"\">Choose ZIP</option>\r\n                    {this.state.companyLocations.filter(x => x.contactZIP !== undefined || x.contactZIP.trim() !== \"\").map(\r\n                      y => <option value={y.contactZIP}>{y.contactZIP}</option>\r\n                    )}\r\n                  </Input>\r\n                  <Label for=\"contactZip\">ZIP not listed? Enter it here</Label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    name=\"contactZip\"\r\n                    id=\"contactZip\"\r\n                    placeholder=\"ZIP code\"\r\n                    onChange={this.handleInputChange}\r\n                  />\r\n                  <Label for=\"contactCountry\">Country</Label>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"contactCountry\"\r\n                    id=\"contactCountry\"\r\n                    onChange={this.handleInputChange}\r\n                  >\r\n                    <option>United States</option>\r\n                    {Object.keys(cities).map(country => (\r\n                      <option>{country}</option>\r\n                    ))}\r\n                  </Input>\r\n                  <Label for=\"contactState\">State</Label>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"contactState\"\r\n                    id=\"contactState\"\r\n                    onChange={this.handleInputChange}\r\n                  >\r\n                    <option>Arizona</option>\r\n                    {us_states.map(state => (\r\n                      <option>{state}</option>\r\n                    ))}\r\n                  </Input>\r\n                  <Label for=\"contactCity\">City</Label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    name=\"contactCity\"\r\n                    id=\"contactCity\"\r\n                    placeholder=\"Enter City\"\r\n                    onChange={this.handleInputChange}\r\n                  />\r\n                </FormGroup>\r\n              )}\r\n\r\n              <FormGroup>\r\n                <Label for=\"equipments\">Equipment needed</Label> <br />\r\n                <input\r\n                  type=\"checkbox\"\r\n                  id=\"Laptop\"\r\n                  name=\"Laptop\"\r\n                  defaultChecked={this.state.Laptop}\r\n                />\r\n                Laptop <br />\r\n                <input\r\n                  type=\"checkbox\"\r\n                  id=\"projectorScreen\"\r\n                  name=\"projectorScreen\"\r\n                  defaultChecked={this.state.projectorScreen}\r\n                />\r\n                Projector Screen\r\n                <br />\r\n                <input\r\n                  type=\"checkbox\"\r\n                  id=\"Table\"\r\n                  name=\"Table\"\r\n                  defaultChecked={this.state.Table}\r\n                />\r\n                Table\r\n                <br />\r\n                <input\r\n                  type=\"checkbox\"\r\n                  id=\"forkliftTrainingKit\"\r\n                  name=\"forkliftTrainingKit\"\r\n                  defaultChecked={this.state.forkliftTrainingKit}\r\n                />\r\n                Forklift Training Kit (Grey Duffle Bag)\r\n                <br />\r\n                <input\r\n                  type=\"checkbox\"\r\n                  id=\"trainingKit\"\r\n                  name=\"trainingKit\"\r\n                  defaultChecked={this.state.trainingKit}\r\n                />\r\n                Training Kit (Green Duffle Bag)\r\n                <br />\r\n                <input\r\n                  type=\"checkbox\"\r\n                  id=\"CPRmannequins\"\r\n                  name=\"CPRmannequins\"\r\n                  defaultChecked={this.state.CPRmannequins}\r\n                />\r\n                CPR Mannequins\r\n                <br />\r\n                <input\r\n                  type=\"checkbox\"\r\n                  id=\"firstAidAEDKit\"\r\n                  name=\"firstAidAEDKit\"\r\n                  defaultChecked={this.state.firstAidAEDKit}\r\n                />\r\n                First Aid AED Kit (Red bagpack)\r\n                <br />\r\n                <input\r\n                  type=\"checkbox\"\r\n                  id=\"RespiratorFitTestKit\"\r\n                  name=\"RespiratorFitTestKit\"\r\n                  defaultChecked={this.state.RespiratorFitTestKit}\r\n                />\r\n                Respirator Fit Test Kit\r\n                <br />\r\n                <input\r\n                  type=\"checkbox\"\r\n                  id=\"Handouts\"\r\n                  name=\"Handouts\"\r\n                  defaultChecked={this.state.Handouts}\r\n                />\r\n                Handouts\r\n                <br />\r\n                <Label for=\"additionalEquipment\">\r\n                  Need additional equipment? Add it here\r\n                </Label>\r\n                <div style={styles.FaPlus} id=\"clearText\">\r\n                  <Input\r\n                    type=\"text\"\r\n                    name=\"addOn\"\r\n                    id=\"addOn\"\r\n                    value={this.state.addOn}\r\n                    onChange={this.handleInputChange}\r\n                  />\r\n                  <FaPlus\r\n                    onClick={() => {\r\n                      if (this.state.addOn.trim() !== \"\") {\r\n                        this.state.additionalEquipments.push(this.state.addOn.trim());\r\n                        document.getElementById('addEquipment').style.display = \"block\";\r\n                      }\r\n                      else{\r\n                        document.getElementById('addEquipment').style.display = \"none\";\r\n                      }\r\n                    }}\r\n                  />{\" \"}\r\n                </div>\r\n                <Alert color=\"success\" id=\"addEquipment\">New equipment added! <span style={{'float':'right'}} onClick = {() => {\r\n                  document.getElementById('addEquipment').style.display = \"none\";\r\n                }}><FaTimes /></span></Alert>\r\n              </FormGroup>\r\n            </div>\r\n            <FormGroup>\r\n              <Label for=\"instructions\">\r\n                Provide instructions to service provider\r\n              </Label>\r\n              <Input\r\n                type=\"textarea\"\r\n                name=\"instructions\"\r\n                id=\"instructions\"\r\n                placeholder=\"Instructions\"\r\n                onChange={this.handleInputChange}\r\n              />\r\n            </FormGroup>\r\n            \r\n            <Button\r\n              name=\"active\"\r\n              onClick={this.handleSubmit}\r\n              disabled={!this.state.active}\r\n            >\r\n              Submit\r\n            </Button>{\" \"}\r\n            &nbsp;\r\n            <Button onClick={this.handlePDF}>Print</Button>\r\n          </Form>\r\n          <br />\r\n\r\n          <div>\r\n            <div id=\"capture\" style={styles.pdf}>\r\n              <div>\r\n                <div style={styles.info}>\r\n                  Insure Compliance, LLC\r\n                  <br />\r\n                  4406 E Main St 102-58\r\n                  <br />\r\n                  Mesa, AZ 85205 US\r\n                  <br />\r\n                  (866) 647-2373\r\n                  <br />\r\n                  insurecompliance.net\r\n                  <br />\r\n                </div>\r\n                <img\r\n                  src=\"./Capture.PNG\"\r\n                  alt=\"Company logo\"\r\n                  style={styles.logo}\r\n                />\r\n              </div>\r\n              <br />\r\n              <br />\r\n              <br />\r\n              <br />\r\n              <br />\r\n              <br />\r\n              <div style={styles.content}>\r\n                <h3 style={styles.quotation}>QUOTATION</h3>\r\n\r\n                <div>\r\n                  <div style={styles.billedTo}>\r\n                    <b>ADDRESS</b>\r\n                    <br />\r\n                    {this.state.companyName}\r\n                    <br />\r\n                    {this.state.contactStreetAddress}\r\n                    <br />\r\n                    {this.state.contactCity}{\" \"}\r\n                    {getInitial(this.state.contactState)}\r\n                    {this.state.contactZip}\r\n                    <br />\r\n                  </div>\r\n\r\n                  <div style={styles.quote}>\r\n                    <b>QUOTATION</b> # 1023 &nbsp; <br />\r\n                    <b>DATE</b>{\" \"}\r\n                    <Moment format=\"YYYY/MM/DD\" date={this.state.startDate} />{\" \"}\r\n                    &nbsp; <br />\r\n                  </div>\r\n                </div>\r\n\r\n                <br />\r\n                <br />\r\n                <br />\r\n                <br />\r\n                <hr style={styles.quotation} />\r\n\r\n                <div>\r\n                  <div style={styles.billedTo}>\r\n                    <b>QUOTATION ISSUED BY</b> &nbsp;\r\n                    {this.state.quotationIssuedBy}\r\n                    <br />\r\n                  </div>\r\n\r\n                  <div style={styles.quote}>\r\n                    <b>QUOTATION VALID THRU</b>&nbsp;\r\n                    <Moment\r\n                      format=\"YYYY/MM/DD\"\r\n                      date={this.state.validThru}\r\n                    />{\" \"}\r\n                    <br />\r\n                  </div>\r\n                </div>\r\n\r\n                <br />\r\n                <br />\r\n\r\n                <table id=\"customers\">\r\n                  <tr>\r\n                    <th>ACTIVITY</th>\r\n                    <th>QTY</th>\r\n                    <th>RATE</th>\r\n                    <th>AMOUNT</th>\r\n                  </tr>\r\n                  <tbody>\r\n                    {this.state.requestedServices.length > 0\r\n                      ? this.state.requestedServiceRows\r\n                      : \"\"}\r\n                  </tbody>\r\n                </table>\r\n\r\n                <br />\r\n                <hr style={styles.quotation} />\r\n                <div style={styles.quote}>\r\n                  <span style={{ fontSize: \"1.25em\" }}>\r\n                    <b>TOTAL</b> <b>{\"$\" + this.state.totalCost.toFixed(2)}</b>\r\n                  </span>\r\n                </div>\r\n                <br />\r\n                <br />\r\n                <div>\r\n                  <div style={styles.billedTo}>\r\n                    <b>Accepted by</b>\r\n                  </div>\r\n\r\n                  <div style={styles.quote}>\r\n                    <b>Accepted Date</b>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport { Jumbotron, Button, Form, FormGroup, Label, Input } from 'reactstrap';\r\nimport { Container, Row, Col } from 'reactstrap';\r\nimport API from \"../../utils/API\";\r\nimport moment from \"moment\";\r\nimport \"./TaskList.scss\";\r\nimport { isNullOrUndefined } from \"util\";\r\n\r\nclass TaskList extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            employee_data: [],\r\n            tasks: [],\r\n            quoteApproved: false,\r\n            employee: \"\",\r\n            tooltipOpen: false\r\n        };\r\n        this.toggle = this.toggle.bind(this);\r\n        this.getTasks = this.getTasks.bind(this);\r\n        this.toggle = this.toggle.bind(this);\r\n    }\r\n\r\n    componentWillMount = () => {\r\n        API.getEmployees()\r\n        .then(res => {\r\n            this.setState({\r\n                employee_data: res.data \r\n            });\r\n        })\r\n        .catch(err => console.log(err));\r\n\r\n    }\r\n\r\n    toggle = () => {\r\n        this.setState({\r\n            isOpen: !this.state.isOpen\r\n        });\r\n    }\r\n\r\n    handleInputChange = e => {\r\n        const {name, value} = e.target;\r\n        this.setState({\r\n            [name]: value\r\n        });\r\n    }\r\n\r\n    getTasks = () => {\r\n        if(this.state.employee.length > 0){\r\n            API.getEmployeeTasks(this.state.employee.split(\" \").join(\"%20\"))\r\n            .then(res => {\r\n                console.log(res.data);\r\n                this.setState({\r\n                    tasks: res.data\r\n                });\r\n            })\r\n            .catch(err => console.log(err));\r\n\r\n            \r\n        }\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <div> \r\n            <Container>\r\n            <Jumbotron>\r\n            <FormGroup>\r\n                <Label for=\"employee\">Employee Name</Label>\r\n                <Input type=\"select\" name=\"employee\" id=\"employee\" onChange={this.handleInputChange} onClick={this.getTasks}>\r\n                    <option>Choose your name</option>\r\n                    {this.state.employee_data.map(x => <option value={x.EMP_NAME}>{x.EMP_NAME}</option>)}\r\n                </Input>\r\n            </FormGroup>\r\n            </Jumbotron>\r\n           \r\n            </Container>\r\n           <Container>\r\n           <Button>Sort by Service</Button>\r\n            <h5 style = {{'fontFamily': 'Noto Serif SC, serif'}}>Active Tasks</h5>\r\n            <br/>\r\n            <table id=\"active\" style={{'text-align':'center'}}>\r\n            <thead className=\"table-header\">\r\n                <tr>\r\n                    <th className=\"col\">QUOTATION NUMBER</th>\r\n                    <th className=\"col\">SERVICE</th>\r\n                    <th className=\"col\">CLIENT</th>\r\n                    <th className=\"col\">DATE ASSIGNED</th>\r\n                    <th className=\"col\">DUE TIME</th>\r\n                    <th className=\"col\">SERVICE UNITS</th>\r\n                    <th className=\"col\">DATE COMPLETED (YYYY-MM-DD)</th>\r\n                    <th className=\"col\">STATUS/NOTES/COMMENTS</th>\r\n                    <th className=\"col\">SERVICE DESCRIPTION</th>\r\n                    <th className=\"col\">QUOTE APPROVED</th>\r\n                    <th className=\"col\">COMPLETED</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                {this.state.tasks.filter(x => isNullOrUndefined(x.dateCompleted) && x.quotationIssuedBy === this.state.employee).map((x, index) => \r\n                <tr key={\"activeList\"+index} className=\"table-row\">\r\n                    <td key={\"activeList\"+index+\"quotationNumber\"}>{x.quotationNumber}</td>\r\n                    <td key={\"activeList\"+index+\"service\"}>{x.service}</td>\r\n                    <td key={\"activeList\"+index+\"client\"}>{x.client}</td>\r\n                    <td key={\"activeList\"+index+\"dateAssigned\"}>{moment(x.dateAssigned).format(\"YYYY-MM-DD\")}</td>\r\n                    <td key={\"activeList\"+index+\"dueTime\"}>{moment(x.dueDate).format(\"YYYY-MM-DD\")}</td>\r\n                    <td key={\"activeList\"+index+\"serviceUnits\"}>{x.qty}</td>\r\n                    <td key={\"activeList\"+index+\"_dateOfCompletion\"}>\r\n                    <Input\r\n                          type=\"text\"\r\n                          name={\"dateOfCompletion\"}\r\n                          id=\"dateOfCompletion\"\r\n                          value={moment(x.createdAt).format(\"YYYY-MM-DD\")}\r\n                          placeholder=\"Enter date of completion\"\r\n                          onChange={this.handleInputChange}\r\n                        />\r\n                    </td>\r\n                    <td key={\"activeList\"+index+\"_notes_comments\"}>\r\n                    <Input\r\n                          type=\"textarea\"\r\n                          name=\"comments\"\r\n                          id=\"comments\"\r\n                          value={x.status_notes_comments}\r\n                          placeholder=\"Enter status/notes/comments\"\r\n                          onChange={this.handleInputChange}\r\n                        />\r\n                    </td>\r\n                    <td key={\"activeList\" + index + \"serviceDescription\"}>\r\n                     {x.serviceDescription}\r\n\r\n                    </td>\r\n                    <td key={\"activeList\"+index+\"_quoteApproved\"}>\r\n                    <FormGroup tag=\"fieldset\">\r\n                        <FormGroup check>\r\n                            <Label check>\r\n                            <Input type=\"radio\" name=\"quoteApproved\" value={true}/>{' '}\r\n                            Yes\r\n                            </Label>\r\n                        </FormGroup>\r\n                        <FormGroup check>\r\n                            <Label check>\r\n                            <Input type=\"radio\" name=\"quoteApproved\" value={false}/>{' '}\r\n                            No\r\n                            </Label>\r\n                        </FormGroup>\r\n                    </FormGroup>\r\n                    </td>\r\n                    <td key={\"activeList\"+index+\"_completed\"}>\r\n                    <FormGroup tag=\"fieldset\">\r\n                        <FormGroup check>\r\n                            <Label check>\r\n                            <Input type=\"radio\" name=\"completed\" value={true}/>{' '}\r\n                            Yes\r\n                            </Label>\r\n                        </FormGroup>\r\n                        <FormGroup check>\r\n                            <Label check>\r\n                            <Input type=\"radio\" name=\"completed\" value={false}/>{' '}\r\n                            No\r\n                            </Label>\r\n                        </FormGroup>\r\n                    </FormGroup>\r\n                    </td>\r\n                </tr>\r\n                )}\r\n            </tbody>\r\n            </table>\r\n            <br/><br/>\r\n            <h5 style = {{'fontFamily': 'Noto Serif SC, serif'}}>Completed Tasks</h5>\r\n            <br/>\r\n            <table id=\"active\" style={{'text-align':'center'}}>\r\n            <thead className=\"table-header\">\r\n                <tr>\r\n                    <th className=\"col\">QUOTATION NUMBER</th>\r\n                    <th className=\"col\">SERVICE</th>\r\n                    <th className=\"col\">CLIENT</th>\r\n                    <th className=\"col\">DATE ASSIGNED</th>\r\n                    <th className=\"col\">DUE TIME</th>\r\n                    <th className=\"col\">SERVICE UNITS</th>\r\n                    <th className=\"col\">DATE COMPLETED (YYYY-MM-DD)</th>\r\n                    <th className=\"col\">STATUS/NOTES/COMMENTS</th>\r\n                    <th className=\"col\">SERVICE DESCRIPTION</th>\r\n                    <th className=\"col\">QUOTE APPROVED</th>\r\n                    <th className=\"col\">COMPLETED</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                {this.state.tasks.filter(x => !isNullOrUndefined(x.dateCompleted) && x.quotationIssuedBy === this.state.employee).map((x, index) => \r\n                <tr key={\"activeList\"+index} className=\"table-row\">\r\n                    <td key={\"activeList\"+index+\"quotationNumber\"}>{x.quotationNumber}</td>\r\n                    <td key={\"activeList\"+index+\"service\"}>{x.service}</td>\r\n                    <td key={\"activeList\"+index+\"client\"}>{x.client}</td>\r\n                    <td key={\"activeList\"+index+\"dateAssigned\"}>{moment(x.dateAssigned).format(\"YYYY-MM-DD\")}</td>\r\n                    <td key={\"activeList\"+index+\"dueTime\"}>{moment(x.dueDate).format(\"YYYY-MM-DD\")}</td>\r\n                    <td key={\"activeList\"+index+\"serviceUnits\"}>{x.qty}</td>\r\n                    <td key={\"activeList\"+index+\"_dateOfCompletion\"}>\r\n                    <Input\r\n                          type=\"text\"\r\n                          name={\"dateOfCompletion\"}\r\n                          id=\"dateOfCompletion\"\r\n                          value={moment(x.createdAt).format(\"YYYY-MM-DD\")}\r\n                          placeholder=\"Enter date of completion\"\r\n                          onChange={this.handleInputChange}\r\n                        />\r\n                    </td>\r\n                    <td key={\"activeList\"+index+\"_notes_comments\"}>\r\n                    <Input\r\n                          type=\"textarea\"\r\n                          name=\"comments\"\r\n                          id=\"comments\"\r\n                          value={x.status_notes_comments}\r\n                          placeholder=\"Enter status/notes/comments\"\r\n                          onChange={this.handleInputChange}\r\n                        />\r\n                    </td>\r\n                    <td key={\"activeList\" + index + \"serviceDescription\"}>\r\n                    {x.serviceDescription}\r\n                    </td>\r\n                    <td key={\"activeList\"+index+\"_quoteApproved\"}>\r\n                    <FormGroup tag=\"fieldset\">\r\n                        <FormGroup check>\r\n                            <Label check>\r\n                            <Input type=\"radio\" name=\"quoteApproved\" value={true}/>{' '}\r\n                            Yes\r\n                            </Label>\r\n                        </FormGroup>\r\n                        <FormGroup check>\r\n                            <Label check>\r\n                            <Input type=\"radio\" name=\"quoteApproved\" value={false} />{' '}\r\n                            No\r\n                            </Label>\r\n                        </FormGroup>\r\n                    </FormGroup>\r\n                    </td>\r\n                    <td key={\"activeList\"+index+\"_completed\"}>\r\n                    <FormGroup tag=\"fieldset\">\r\n                        <FormGroup check>\r\n                            <Label check>\r\n                            <Input type=\"radio\" name=\"quoteApproved\" value={true}/>{' '}\r\n                            Yes\r\n                            </Label>\r\n                        </FormGroup>\r\n                        <FormGroup check>\r\n                            <Label check>\r\n                            <Input type=\"radio\" name=\"quoteApproved\" value={false} />{' '}\r\n                            No\r\n                            </Label>\r\n                        </FormGroup>\r\n                    </FormGroup>\r\n                    </td>\r\n                </tr>\r\n                )}\r\n            </tbody>\r\n            </table>\r\n           </Container>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default TaskList;","import React from \"react\";\r\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\r\nimport CONSTANTS from \"./constants/routes.js\";\r\nimport ServiceRequestForm from \"./Pages/ServiceRequestForm/ServiceRequestForm\";\r\nimport TaskList from \"./Pages/TaskList/TaskList\";\r\nimport {Collapse, Navbar, NavbarToggler, NavbarBrand, Nav, NavItem, NavLink, UncontrolledDropdown, DropdownToggle, DropdownMenu, DropdownItem} from \"reactstrap\";\r\nimport routes from \"./constants/routes\";\r\n// import firebase from './firebase.js';\r\n\r\n// import Login from \"./Pages/Login/Login\";\r\nclass App extends React.Component{\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      isOpen: false\r\n    };\r\n    this.toggle = this.toggle.bind(this);\r\n    console.log(process.env.PUBLIC_URL);  \r\n  }\r\n\r\n  //Toggling Navbar\r\n  toggle() {\r\n    this.setState({\r\n      isOpen: !this.state.isOpen\r\n    });\r\n  }\r\n\r\n  render(){\r\n  return (\r\n    <div>\r\n      <Navbar color=\"light\" light expand=\"md\">\r\n          <NavbarBrand href=\"/\">\r\n            <img src=\"./logo.png\" />\r\n            <h1 className=\"float-right\">&nbsp;Insure Compliance</h1>{\" \"}\r\n          </NavbarBrand>\r\n          <NavbarToggler onClick={this.toggle} />\r\n          <Collapse isOpen={this.state.isOpen} navbar>\r\n            <Nav className=\"ml-auto\" navbar>\r\n              <NavItem>\r\n                <NavLink href={CONSTANTS.SERVICE_FORM}>Service Request Form</NavLink>\r\n              </NavItem>\r\n              <NavItem>\r\n                <NavLink href={CONSTANTS.TASK_LIST}>Task List</NavLink>\r\n              </NavItem>\r\n            </Nav>\r\n          </Collapse>\r\n        </Navbar>\r\n        <BrowserRouter basename={process.env.PUBLIC_URL}>\r\n        <Switch>\r\n        <Route exact={true} path={process.env.PUBLIC_URL + \"/\" + routes.SERVICE_FORM} component={ServiceRequestForm} />\r\n        {/* <Route exact={true} path={routes.LOGIN} component={LoginPage} />\r\n        <Route exact={true} path={routes.REGISTER} component={RegisterPage} /> */}\r\n        <Route exact={true} path={process.env.PUBLIC_URL + \"/\" + routes.TASK_LIST} component={TaskList} />\r\n        <Route component={() => (<div>404 Not found </div>)} />\r\n        </Switch>\r\n        </BrowserRouter>\r\n    </div>\r\n  ) \r\n  \r\n}\r\n};\r\n\r\nexport default App;","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n  \r\n\r\n"],"sourceRoot":""}